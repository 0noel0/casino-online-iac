name: 'Release'

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    name: 'Create Release'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
      repository-projects: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Generate changelog
      id: changelog
      run: |
        # Extract changelog for this version
        if [ -f CHANGELOG.md ]; then
          # Get content between current version and previous version
          awk '/^## \['${{ steps.get_version.outputs.VERSION }}'\]/{flag=1; next} /^## \[/{if(flag) exit} flag' CHANGELOG.md > release_notes.md
          
          # If release notes are empty, use a default message
          if [ ! -s release_notes.md ]; then
            echo "## Cambios en v${{ steps.get_version.outputs.VERSION }}" > release_notes.md
            echo "" >> release_notes.md
            echo "Ver [CHANGELOG.md](./CHANGELOG.md) para más detalles." >> release_notes.md
          fi
        else
          echo "## Release v${{ steps.get_version.outputs.VERSION }}" > release_notes.md
          echo "" >> release_notes.md
          echo "Nueva versión de la infraestructura de Casino Online." >> release_notes.md
        fi
        
        echo "RELEASE_NOTES<<EOF" >> $GITHUB_OUTPUT
        cat release_notes.md >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: 'Casino Online IAC v${{ steps.get_version.outputs.VERSION }}'
        body: ${{ steps.changelog.outputs.RELEASE_NOTES }}
        draft: false
        prerelease: false

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: '1.6.0'

    - name: Terraform Format Check
      run: terraform fmt -check -recursive

    - name: Terraform Init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate

    - name: Create deployment artifact
      run: |
        mkdir -p artifacts
        tar -czf artifacts/casino-online-iac-v${{ steps.get_version.outputs.VERSION }}.tar.gz \
          --exclude='.git' \
          --exclude='artifacts' \
          --exclude='.terraform' \
          --exclude='*.tfstate*' \
          --exclude='*.tfvars' \
          .

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/casino-online-iac-v${{ steps.get_version.outputs.VERSION }}.tar.gz
        asset_name: casino-online-iac-v${{ steps.get_version.outputs.VERSION }}.tar.gz
        asset_content_type: application/gzip